import { ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, ViewContainerRef } from '@angular/core';
import { NbPosition } from './overlay-position';
import { NbComponentPortal, NbPortalInjector, NbPortalOutletDirective, NbTemplatePortal } from './mapping';
import * as ɵngcc0 from '@angular/core';
export interface NbRenderableContainer {
    /**
     * A renderContent method renders content with provided context.
     * Naturally, this job has to be done by ngOnChanges lifecycle hook, but
     * ngOnChanges hook will be triggered only if we update content or context properties
     * through template property binding syntax. But in our case we're updating these properties programmatically.
     * */
    renderContent(): any;
}
export declare class NbPositionedContainer {
    position: NbPosition;
    get top(): boolean;
    get topStart(): boolean;
    get topEnd(): boolean;
    get right(): boolean;
    get endTop(): boolean;
    get endBottom(): boolean;
    get bottom(): boolean;
    get bottomStart(): boolean;
    get bottomEnd(): boolean;
    get left(): boolean;
    get startTop(): boolean;
    get startBottom(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbPositionedContainer, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbPositionedContainer, "ng-component", never, { "position": "position"; }, {}, never, never>;
}
export declare class NbOverlayContainerComponent {
    protected vcr: ViewContainerRef;
    protected injector: Injector;
    private changeDetectorRef;
    portalOutlet: NbPortalOutletDirective;
    isAttached: boolean;
    content: string;
    constructor(vcr: ViewContainerRef, injector: Injector, changeDetectorRef: ChangeDetectorRef);
    get isStringContent(): boolean;
    attachComponentPortal<T>(portal: NbComponentPortal<T>, context?: Object): ComponentRef<T>;
    attachTemplatePortal<C>(portal: NbTemplatePortal<C>): EmbeddedViewRef<C>;
    attachStringContent(content: string): void;
    detach(): void;
    protected createChildInjector(cfr: ComponentFactoryResolver): NbPortalInjector;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbOverlayContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbOverlayContainerComponent, "nb-overlay-container", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS1jb250YWluZXIuZC50cyIsInNvdXJjZXMiOlsib3ZlcmxheS1jb250YWluZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIENvbXBvbmVudFJlZiwgRW1iZWRkZWRWaWV3UmVmLCBJbmplY3RvciwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmJQb3NpdGlvbiB9IGZyb20gJy4vb3ZlcmxheS1wb3NpdGlvbic7XG5pbXBvcnQgeyBOYkNvbXBvbmVudFBvcnRhbCwgTmJQb3J0YWxJbmplY3RvciwgTmJQb3J0YWxPdXRsZXREaXJlY3RpdmUsIE5iVGVtcGxhdGVQb3J0YWwgfSBmcm9tICcuL21hcHBpbmcnO1xuZXhwb3J0IGludGVyZmFjZSBOYlJlbmRlcmFibGVDb250YWluZXIge1xuICAgIC8qKlxuICAgICAqIEEgcmVuZGVyQ29udGVudCBtZXRob2QgcmVuZGVycyBjb250ZW50IHdpdGggcHJvdmlkZWQgY29udGV4dC5cbiAgICAgKiBOYXR1cmFsbHksIHRoaXMgam9iIGhhcyB0byBiZSBkb25lIGJ5IG5nT25DaGFuZ2VzIGxpZmVjeWNsZSBob29rLCBidXRcbiAgICAgKiBuZ09uQ2hhbmdlcyBob29rIHdpbGwgYmUgdHJpZ2dlcmVkIG9ubHkgaWYgd2UgdXBkYXRlIGNvbnRlbnQgb3IgY29udGV4dCBwcm9wZXJ0aWVzXG4gICAgICogdGhyb3VnaCB0ZW1wbGF0ZSBwcm9wZXJ0eSBiaW5kaW5nIHN5bnRheC4gQnV0IGluIG91ciBjYXNlIHdlJ3JlIHVwZGF0aW5nIHRoZXNlIHByb3BlcnRpZXMgcHJvZ3JhbW1hdGljYWxseS5cbiAgICAgKiAqL1xuICAgIHJlbmRlckNvbnRlbnQoKTogYW55O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJQb3NpdGlvbmVkQ29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogTmJQb3NpdGlvbjtcbiAgICBnZXQgdG9wKCk6IGJvb2xlYW47XG4gICAgZ2V0IHRvcFN0YXJ0KCk6IGJvb2xlYW47XG4gICAgZ2V0IHRvcEVuZCgpOiBib29sZWFuO1xuICAgIGdldCByaWdodCgpOiBib29sZWFuO1xuICAgIGdldCBlbmRUb3AoKTogYm9vbGVhbjtcbiAgICBnZXQgZW5kQm90dG9tKCk6IGJvb2xlYW47XG4gICAgZ2V0IGJvdHRvbSgpOiBib29sZWFuO1xuICAgIGdldCBib3R0b21TdGFydCgpOiBib29sZWFuO1xuICAgIGdldCBib3R0b21FbmQoKTogYm9vbGVhbjtcbiAgICBnZXQgbGVmdCgpOiBib29sZWFuO1xuICAgIGdldCBzdGFydFRvcCgpOiBib29sZWFuO1xuICAgIGdldCBzdGFydEJvdHRvbSgpOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJPdmVybGF5Q29udGFpbmVyQ29tcG9uZW50IHtcbiAgICBwcm90ZWN0ZWQgdmNyOiBWaWV3Q29udGFpbmVyUmVmO1xuICAgIHByb3RlY3RlZCBpbmplY3RvcjogSW5qZWN0b3I7XG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwb3J0YWxPdXRsZXQ6IE5iUG9ydGFsT3V0bGV0RGlyZWN0aXZlO1xuICAgIGlzQXR0YWNoZWQ6IGJvb2xlYW47XG4gICAgY29udGVudDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHZjcjogVmlld0NvbnRhaW5lclJlZiwgaW5qZWN0b3I6IEluamVjdG9yLCBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGdldCBpc1N0cmluZ0NvbnRlbnQoKTogYm9vbGVhbjtcbiAgICBhdHRhY2hDb21wb25lbnRQb3J0YWw8VD4ocG9ydGFsOiBOYkNvbXBvbmVudFBvcnRhbDxUPiwgY29udGV4dD86IE9iamVjdCk6IENvbXBvbmVudFJlZjxUPjtcbiAgICBhdHRhY2hUZW1wbGF0ZVBvcnRhbDxDPihwb3J0YWw6IE5iVGVtcGxhdGVQb3J0YWw8Qz4pOiBFbWJlZGRlZFZpZXdSZWY8Qz47XG4gICAgYXR0YWNoU3RyaW5nQ29udGVudChjb250ZW50OiBzdHJpbmcpOiB2b2lkO1xuICAgIGRldGFjaCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBjcmVhdGVDaGlsZEluamVjdG9yKGNmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyKTogTmJQb3J0YWxJbmplY3Rvcjtcbn1cbiJdfQ==
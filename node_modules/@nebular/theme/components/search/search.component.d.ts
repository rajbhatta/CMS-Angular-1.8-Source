/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { Router } from '@angular/router';
import { NbSearchService } from './search.service';
import { NbThemeService } from '../../services/theme.service';
import { NbOverlayService } from '../cdk/overlay/overlay-service';
import { NbPortalDirective } from '../cdk/overlay/mapping';
/**
 * search-field-component is used under the hood by nb-search component
 * can't be used itself
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbSearchFieldComponent implements OnChanges, AfterViewInit {
    static readonly TYPE_MODAL_ZOOMIN = "modal-zoomin";
    static readonly TYPE_ROTATE_LAYOUT = "rotate-layout";
    static readonly TYPE_MODAL_MOVE = "modal-move";
    static readonly TYPE_CURTAIN = "curtain";
    static readonly TYPE_COLUMN_CURTAIN = "column-curtain";
    static readonly TYPE_MODAL_DROP = "modal-drop";
    static readonly TYPE_MODAL_HALF = "modal-half";
    type: string;
    placeholder: string;
    hint: string;
    show: boolean;
    close: EventEmitter<any>;
    search: EventEmitter<any>;
    searchInput: EventEmitter<any>;
    inputElement: ElementRef<HTMLInputElement>;
    get showClass(): boolean;
    get modalZoomin(): boolean;
    get rotateLayout(): boolean;
    get modalMove(): boolean;
    get curtain(): boolean;
    get columnCurtain(): boolean;
    get modalDrop(): boolean;
    get modalHalf(): boolean;
    ngOnChanges({ show }: SimpleChanges): void;
    ngAfterViewInit(): void;
    emitClose(): void;
    submitSearch(term: any): void;
    emitSearchInput(term: string): void;
    focusInput(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSearchFieldComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbSearchFieldComponent, "nb-search-field", never, { "show": "show"; "type": "type"; "placeholder": "placeholder"; "hint": "hint"; }, { "close": "close"; "search": "search"; "searchInput": "searchInput"; }, never, never>;
}
export declare type NbSearchType = 'modal-zoomin' | 'rotate-layout' | 'modal-move' | 'curtain' | 'column-curtain' | 'modal-drop' | 'modal-half';
/**
 * Beautiful full-page search control.
 *
 * @stacked-example(Showcase, search/search-showcase.component)
 *
 * Basic setup:
 *
 * ```ts
 *  <nb-search type="rotate-layout"></nb-search>
 * ```
 * ### Installation
 *
 * Import `NbSearchModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbSearchModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Several animation types are available:
 * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half
 *
 * It is also possible to handle search event using `NbSearchService`:
 *
 * @stacked-example(Search Event, search/search-event.component)
 *
 * @styles
 *
 * search-background-color:
 * search-divider-color:
 * search-divider-style:
 * search-divider-width:
 * search-extra-background-color:
 * search-text-color:
 * search-text-font-family:
 * search-text-font-size:
 * search-text-font-weight:
 * search-text-line-height:
 * search-placeholder-text-color:
 * search-info-text-color:
 * search-info-text-font-family:
 * search-info-text-font-size:
 * search-info-text-font-weight:
 * search-info-text-line-height:
 */
export declare class NbSearchComponent implements OnInit, OnDestroy {
    private searchService;
    private themeService;
    private router;
    private overlayService;
    private changeDetector;
    private destroy$;
    private overlayRef;
    showSearchField: boolean;
    /**
     * Tags a search with some ID, can be later used in the search service
     * to determine which search component triggered the action, if multiple searches exist on the page.
     *
     * @type {string}
     */
    tag: string;
    /**
     * Search input placeholder
     * @type {string}
     */
    placeholder: string;
    /**
     * Hint showing under the input field to improve user experience
     *
     * @type {string}
     */
    hint: string;
    /**
     * Search design type, available types are
     * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half
     * @type {string}
     */
    type: NbSearchType;
    searchFieldPortal: NbPortalDirective;
    searchButton: ElementRef<HTMLElement>;
    constructor(searchService: NbSearchService, themeService: NbThemeService, router: Router, overlayService: NbOverlayService, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    openSearch(): void;
    hideSearch(): void;
    search(term: any): void;
    emitInput(term: string): void;
    emitActivate(): void;
    emitDeactivate(): void;
    private removeLayoutClasses;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSearchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbSearchComponent, "nb-search", never, { "placeholder": "placeholder"; "hint": "hint"; "tag": "tag"; "type": "type"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzZWFyY2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE5iU2VhcmNoU2VydmljZSB9IGZyb20gJy4vc2VhcmNoLnNlcnZpY2UnO1xuaW1wb3J0IHsgTmJUaGVtZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90aGVtZS5zZXJ2aWNlJztcbmltcG9ydCB7IE5iT3ZlcmxheVNlcnZpY2UgfSBmcm9tICcuLi9jZGsvb3ZlcmxheS9vdmVybGF5LXNlcnZpY2UnO1xuaW1wb3J0IHsgTmJQb3J0YWxEaXJlY3RpdmUgfSBmcm9tICcuLi9jZGsvb3ZlcmxheS9tYXBwaW5nJztcbi8qKlxuICogc2VhcmNoLWZpZWxkLWNvbXBvbmVudCBpcyB1c2VkIHVuZGVyIHRoZSBob29kIGJ5IG5iLXNlYXJjaCBjb21wb25lbnRcbiAqIGNhbid0IGJlIHVzZWQgaXRzZWxmXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iU2VhcmNoRmllbGRDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQge1xuICAgIHN0YXRpYyByZWFkb25seSBUWVBFX01PREFMX1pPT01JTiA9IFwibW9kYWwtem9vbWluXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFRZUEVfUk9UQVRFX0xBWU9VVCA9IFwicm90YXRlLWxheW91dFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBUWVBFX01PREFMX01PVkUgPSBcIm1vZGFsLW1vdmVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgVFlQRV9DVVJUQUlOID0gXCJjdXJ0YWluXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFRZUEVfQ09MVU1OX0NVUlRBSU4gPSBcImNvbHVtbi1jdXJ0YWluXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFRZUEVfTU9EQUxfRFJPUCA9IFwibW9kYWwtZHJvcFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBUWVBFX01PREFMX0hBTEYgPSBcIm1vZGFsLWhhbGZcIjtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBoaW50OiBzdHJpbmc7XG4gICAgc2hvdzogYm9vbGVhbjtcbiAgICBjbG9zZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc2VhcmNoOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzZWFyY2hJbnB1dDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmPEhUTUxJbnB1dEVsZW1lbnQ+O1xuICAgIGdldCBzaG93Q2xhc3MoKTogYm9vbGVhbjtcbiAgICBnZXQgbW9kYWxab29taW4oKTogYm9vbGVhbjtcbiAgICBnZXQgcm90YXRlTGF5b3V0KCk6IGJvb2xlYW47XG4gICAgZ2V0IG1vZGFsTW92ZSgpOiBib29sZWFuO1xuICAgIGdldCBjdXJ0YWluKCk6IGJvb2xlYW47XG4gICAgZ2V0IGNvbHVtbkN1cnRhaW4oKTogYm9vbGVhbjtcbiAgICBnZXQgbW9kYWxEcm9wKCk6IGJvb2xlYW47XG4gICAgZ2V0IG1vZGFsSGFsZigpOiBib29sZWFuO1xuICAgIG5nT25DaGFuZ2VzKHsgc2hvdyB9OiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBlbWl0Q2xvc2UoKTogdm9pZDtcbiAgICBzdWJtaXRTZWFyY2godGVybTogYW55KTogdm9pZDtcbiAgICBlbWl0U2VhcmNoSW5wdXQodGVybTogc3RyaW5nKTogdm9pZDtcbiAgICBmb2N1c0lucHV0KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iU2VhcmNoVHlwZSA9ICdtb2RhbC16b29taW4nIHwgJ3JvdGF0ZS1sYXlvdXQnIHwgJ21vZGFsLW1vdmUnIHwgJ2N1cnRhaW4nIHwgJ2NvbHVtbi1jdXJ0YWluJyB8ICdtb2RhbC1kcm9wJyB8ICdtb2RhbC1oYWxmJztcbi8qKlxuICogQmVhdXRpZnVsIGZ1bGwtcGFnZSBzZWFyY2ggY29udHJvbC5cbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKFNob3djYXNlLCBzZWFyY2gvc2VhcmNoLXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiBCYXNpYyBzZXR1cDpcbiAqXG4gKiBgYGB0c1xuICogIDxuYi1zZWFyY2ggdHlwZT1cInJvdGF0ZS1sYXlvdXRcIj48L25iLXNlYXJjaD5cbiAqIGBgYFxuICogIyMjIEluc3RhbGxhdGlvblxuICpcbiAqIEltcG9ydCBgTmJTZWFyY2hNb2R1bGVgIHRvIHlvdXIgZmVhdHVyZSBtb2R1bGUuXG4gKiBgYGB0c1xuICogQE5nTW9kdWxlKHtcbiAqICAgaW1wb3J0czogW1xuICogICAgIC8vIC4uLlxuICogICAgIE5iU2VhcmNoTW9kdWxlLFxuICogICBdLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBQYWdlTW9kdWxlIHsgfVxuICogYGBgXG4gKiAjIyMgVXNhZ2VcbiAqXG4gKiBTZXZlcmFsIGFuaW1hdGlvbiB0eXBlcyBhcmUgYXZhaWxhYmxlOlxuICogbW9kYWwtem9vbWluLCByb3RhdGUtbGF5b3V0LCBtb2RhbC1tb3ZlLCBjdXJ0YWluLCBjb2x1bW4tY3VydGFpbiwgbW9kYWwtZHJvcCwgbW9kYWwtaGFsZlxuICpcbiAqIEl0IGlzIGFsc28gcG9zc2libGUgdG8gaGFuZGxlIHNlYXJjaCBldmVudCB1c2luZyBgTmJTZWFyY2hTZXJ2aWNlYDpcbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKFNlYXJjaCBFdmVudCwgc2VhcmNoL3NlYXJjaC1ldmVudC5jb21wb25lbnQpXG4gKlxuICogQHN0eWxlc1xuICpcbiAqIHNlYXJjaC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogc2VhcmNoLWRpdmlkZXItY29sb3I6XG4gKiBzZWFyY2gtZGl2aWRlci1zdHlsZTpcbiAqIHNlYXJjaC1kaXZpZGVyLXdpZHRoOlxuICogc2VhcmNoLWV4dHJhLWJhY2tncm91bmQtY29sb3I6XG4gKiBzZWFyY2gtdGV4dC1jb2xvcjpcbiAqIHNlYXJjaC10ZXh0LWZvbnQtZmFtaWx5OlxuICogc2VhcmNoLXRleHQtZm9udC1zaXplOlxuICogc2VhcmNoLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBzZWFyY2gtdGV4dC1saW5lLWhlaWdodDpcbiAqIHNlYXJjaC1wbGFjZWhvbGRlci10ZXh0LWNvbG9yOlxuICogc2VhcmNoLWluZm8tdGV4dC1jb2xvcjpcbiAqIHNlYXJjaC1pbmZvLXRleHQtZm9udC1mYW1pbHk6XG4gKiBzZWFyY2gtaW5mby10ZXh0LWZvbnQtc2l6ZTpcbiAqIHNlYXJjaC1pbmZvLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBzZWFyY2gtaW5mby10ZXh0LWxpbmUtaGVpZ2h0OlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlNlYXJjaENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHNlYXJjaFNlcnZpY2U7XG4gICAgcHJpdmF0ZSB0aGVtZVNlcnZpY2U7XG4gICAgcHJpdmF0ZSByb3V0ZXI7XG4gICAgcHJpdmF0ZSBvdmVybGF5U2VydmljZTtcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yO1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgcHJpdmF0ZSBvdmVybGF5UmVmO1xuICAgIHNob3dTZWFyY2hGaWVsZDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUYWdzIGEgc2VhcmNoIHdpdGggc29tZSBJRCwgY2FuIGJlIGxhdGVyIHVzZWQgaW4gdGhlIHNlYXJjaCBzZXJ2aWNlXG4gICAgICogdG8gZGV0ZXJtaW5lIHdoaWNoIHNlYXJjaCBjb21wb25lbnQgdHJpZ2dlcmVkIHRoZSBhY3Rpb24sIGlmIG11bHRpcGxlIHNlYXJjaGVzIGV4aXN0IG9uIHRoZSBwYWdlLlxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICB0YWc6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTZWFyY2ggaW5wdXQgcGxhY2Vob2xkZXJcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSGludCBzaG93aW5nIHVuZGVyIHRoZSBpbnB1dCBmaWVsZCB0byBpbXByb3ZlIHVzZXIgZXhwZXJpZW5jZVxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBoaW50OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU2VhcmNoIGRlc2lnbiB0eXBlLCBhdmFpbGFibGUgdHlwZXMgYXJlXG4gICAgICogbW9kYWwtem9vbWluLCByb3RhdGUtbGF5b3V0LCBtb2RhbC1tb3ZlLCBjdXJ0YWluLCBjb2x1bW4tY3VydGFpbiwgbW9kYWwtZHJvcCwgbW9kYWwtaGFsZlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgdHlwZTogTmJTZWFyY2hUeXBlO1xuICAgIHNlYXJjaEZpZWxkUG9ydGFsOiBOYlBvcnRhbERpcmVjdGl2ZTtcbiAgICBzZWFyY2hCdXR0b246IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICAgIGNvbnN0cnVjdG9yKHNlYXJjaFNlcnZpY2U6IE5iU2VhcmNoU2VydmljZSwgdGhlbWVTZXJ2aWNlOiBOYlRoZW1lU2VydmljZSwgcm91dGVyOiBSb3V0ZXIsIG92ZXJsYXlTZXJ2aWNlOiBOYk92ZXJsYXlTZXJ2aWNlLCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBvcGVuU2VhcmNoKCk6IHZvaWQ7XG4gICAgaGlkZVNlYXJjaCgpOiB2b2lkO1xuICAgIHNlYXJjaCh0ZXJtOiBhbnkpOiB2b2lkO1xuICAgIGVtaXRJbnB1dCh0ZXJtOiBzdHJpbmcpOiB2b2lkO1xuICAgIGVtaXRBY3RpdmF0ZSgpOiB2b2lkO1xuICAgIGVtaXREZWFjdGl2YXRlKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZW1vdmVMYXlvdXRDbGFzc2VzO1xufVxuIl19
import { ElementRef, OnDestroy, OnInit, TemplateRef, Renderer2, ComponentFactoryResolver, AfterViewChecked } from '@angular/core';
import { NbFocusTrap, NbFocusTrapFactoryService } from '../cdk/a11y/focus-trap';
import { NbComponentType } from '../cdk/overlay/mapping';
import { NbOverlayContainerComponent } from '../cdk/overlay/overlay-container';
import { NbWindowConfig } from './window.options';
import { NbWindowRef } from './window-ref';
import * as ɵngcc0 from '@angular/core';
export declare class NbWindowComponent implements OnInit, AfterViewChecked, OnDestroy {
    content: TemplateRef<any> | NbComponentType;
    context: Object;
    windowRef: NbWindowRef;
    config: NbWindowConfig;
    protected focusTrapFactory: NbFocusTrapFactoryService;
    protected elementRef: ElementRef;
    protected renderer: Renderer2;
    cfr: ComponentFactoryResolver;
    get isFullScreen(): boolean;
    get maximized(): boolean;
    get minimized(): boolean;
    overlayContainer: NbOverlayContainerComponent;
    protected focusTrap: NbFocusTrap;
    constructor(content: TemplateRef<any> | NbComponentType, context: Object, windowRef: NbWindowRef, config: NbWindowConfig, focusTrapFactory: NbFocusTrapFactoryService, elementRef: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    minimize(): void;
    maximize(): void;
    fullScreen(): void;
    maximizeOrFullScreen(): void;
    close(): void;
    protected attachTemplate(): void;
    protected attachComponent(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbWindowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbWindowComponent, "nb-window", never, { "cfr": "cfr"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ3aW5kb3cuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgT25Jbml0LCBUZW1wbGF0ZVJlZiwgUmVuZGVyZXIyLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEFmdGVyVmlld0NoZWNrZWQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iRm9jdXNUcmFwLCBOYkZvY3VzVHJhcEZhY3RvcnlTZXJ2aWNlIH0gZnJvbSAnLi4vY2RrL2ExMXkvZm9jdXMtdHJhcCc7XG5pbXBvcnQgeyBOYkNvbXBvbmVudFR5cGUgfSBmcm9tICcuLi9jZGsvb3ZlcmxheS9tYXBwaW5nJztcbmltcG9ydCB7IE5iT3ZlcmxheUNvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4uL2Nkay9vdmVybGF5L292ZXJsYXktY29udGFpbmVyJztcbmltcG9ydCB7IE5iV2luZG93Q29uZmlnIH0gZnJvbSAnLi93aW5kb3cub3B0aW9ucyc7XG5pbXBvcnQgeyBOYldpbmRvd1JlZiB9IGZyb20gJy4vd2luZG93LXJlZic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYldpbmRvd0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3Q2hlY2tlZCwgT25EZXN0cm95IHtcbiAgICBjb250ZW50OiBUZW1wbGF0ZVJlZjxhbnk+IHwgTmJDb21wb25lbnRUeXBlO1xuICAgIGNvbnRleHQ6IE9iamVjdDtcbiAgICB3aW5kb3dSZWY6IE5iV2luZG93UmVmO1xuICAgIGNvbmZpZzogTmJXaW5kb3dDb25maWc7XG4gICAgcHJvdGVjdGVkIGZvY3VzVHJhcEZhY3Rvcnk6IE5iRm9jdXNUcmFwRmFjdG9yeVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY7XG4gICAgcHJvdGVjdGVkIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI7XG4gICAgZ2V0IGlzRnVsbFNjcmVlbigpOiBib29sZWFuO1xuICAgIGdldCBtYXhpbWl6ZWQoKTogYm9vbGVhbjtcbiAgICBnZXQgbWluaW1pemVkKCk6IGJvb2xlYW47XG4gICAgb3ZlcmxheUNvbnRhaW5lcjogTmJPdmVybGF5Q29udGFpbmVyQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBmb2N1c1RyYXA6IE5iRm9jdXNUcmFwO1xuICAgIGNvbnN0cnVjdG9yKGNvbnRlbnQ6IFRlbXBsYXRlUmVmPGFueT4gfCBOYkNvbXBvbmVudFR5cGUsIGNvbnRleHQ6IE9iamVjdCwgd2luZG93UmVmOiBOYldpbmRvd1JlZiwgY29uZmlnOiBOYldpbmRvd0NvbmZpZywgZm9jdXNUcmFwRmFjdG9yeTogTmJGb2N1c1RyYXBGYWN0b3J5U2VydmljZSwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG1pbmltaXplKCk6IHZvaWQ7XG4gICAgbWF4aW1pemUoKTogdm9pZDtcbiAgICBmdWxsU2NyZWVuKCk6IHZvaWQ7XG4gICAgbWF4aW1pemVPckZ1bGxTY3JlZW4oKTogdm9pZDtcbiAgICBjbG9zZSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBhdHRhY2hUZW1wbGF0ZSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBhdHRhY2hDb21wb25lbnQoKTogdm9pZDtcbn1cbiJdfQ==
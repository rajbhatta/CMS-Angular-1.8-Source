/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { NbComponentStatus } from '../component-status';
import { NbIconLibraries } from './icon-libraries';
import * as ɵngcc0 from '@angular/core';
export interface NbIconConfig {
    icon: string;
    pack?: string;
    status?: NbComponentStatus;
    options?: {
        [name: string]: any;
    };
}
/**
 * Icon component. Allows to render both `svg` and `font` icons.
 * Starting from Nebular 4.0 uses [Eva Icons](https://akveo.github.io/eva-icons/) pack by default.
 *
 * Basic icon example:
 * @stacked-example(Showcase, icon/icon-showcase.component)
 *
 * Icon configuration:
 *
 * ```html
 * <nb-icon icon="star"></nb-icon>
 * ```
 * ### Installation
 *
 * By default Nebular comes without any pre-installed icon pack.
 * Starting with Nebular 4.0.0 we ship separate package called `@nebular/eva-icons`
 * which integrates SVG [Eva Icons](https://akveo.github.io/eva-icons/) pack to Nebular. To add it to your
 * project run:
 * ```sh
 * npm i @nebular/eva-icons
 * ```
 * This command will install Eva Icons pack. Then register `NbEvaIconsModule` into your app module:
 * ```ts
 * import { NbEvaIconsModule } from '@nebular/eva-icons';
 *
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbEvaIconsModule,
 *   ],
 * })
 * export class AppModule { }
 * ```
 * Last thing, import `NbIconModule` to your feature module where you need to show an icon:
 * ```ts
 * import { NbIconModule } from '@nebular/theme';
 *
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbIconModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Icon can be colored using `status` input:
 * ```html
 * <nb-icon icon="star" status="warning"></nb-icon>
 * ```
 *
 * Colored icons:
 * @stacked-example(Colored Icons, icon/icon-colors.component)
 *
 * In case you need to specify an icon from a specific icon pack, this could be done using `pack` input property:
 * ```html
 * <nb-icon icon="star" pack="font-awesome"></nb-icon>
 * ```
 * Additional icon settings (if available by the icon pack) could be passed using `options` input:
 *
 * ```html
 * <nb-icon icon="star" [options]="{ animation: { type: 'zoom' } }"></nb-icon>
 * ```
 *
 * @styles
 *
 * icon-font-size:
 * icon-line-height:
 * icon-width:
 * icon-height:
 * icon-svg-vertical-align:
 * icon-basic-color:
 * icon-primary-color:
 * icon-info-color:
 * icon-success-color:
 * icon-warning-color:
 * icon-danger-color:
 * icon-control-color:
 */
export declare class NbIconComponent implements NbIconConfig, OnChanges, OnInit {
    protected sanitizer: DomSanitizer;
    protected iconLibrary: NbIconLibraries;
    protected el: ElementRef;
    protected renderer: Renderer2;
    protected iconDef: any;
    protected prevClasses: any[];
    html: SafeHtml;
    get primary(): boolean;
    get info(): boolean;
    get success(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    /**
     * Icon name
     * @param {string} status
     */
    icon: string;
    /**
     * Icon pack name
     * @param {string} status
     */
    pack: string;
    /**
     * Additional icon settings
     * @param {[name: string]: any}
     */
    options: {
        [name: string]: any;
    };
    /**
     * Icon status (adds specific styles):
     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`
     */
    status?: NbComponentStatus;
    /**
     * Sets all icon configurable properties via config object.
     * If passed value is a string set icon name.
     * @docs-private
     */
    get config(): string | NbIconConfig;
    set config(value: string | NbIconConfig);
    protected _config: string | NbIconConfig;
    constructor(sanitizer: DomSanitizer, iconLibrary: NbIconLibraries, el: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngOnChanges(): void;
    renderIcon(name: string, pack?: string, options?: {
        [name: string]: any;
    }): import("./icon-libraries").NbIconDefinition;
    protected assignClasses(classes: string[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbIconComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbIconComponent, "nb-icon", never, { "config": "config"; "icon": "icon"; "pack": "pack"; "status": "status"; "options": "options"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiaWNvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBOYkNvbXBvbmVudFN0YXR1cyB9IGZyb20gJy4uL2NvbXBvbmVudC1zdGF0dXMnO1xuaW1wb3J0IHsgTmJJY29uTGlicmFyaWVzIH0gZnJvbSAnLi9pY29uLWxpYnJhcmllcyc7XG5leHBvcnQgaW50ZXJmYWNlIE5iSWNvbkNvbmZpZyB7XG4gICAgaWNvbjogc3RyaW5nO1xuICAgIHBhY2s/OiBzdHJpbmc7XG4gICAgc3RhdHVzPzogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgb3B0aW9ucz86IHtcbiAgICAgICAgW25hbWU6IHN0cmluZ106IGFueTtcbiAgICB9O1xufVxuLyoqXG4gKiBJY29uIGNvbXBvbmVudC4gQWxsb3dzIHRvIHJlbmRlciBib3RoIGBzdmdgIGFuZCBgZm9udGAgaWNvbnMuXG4gKiBTdGFydGluZyBmcm9tIE5lYnVsYXIgNC4wIHVzZXMgW0V2YSBJY29uc10oaHR0cHM6Ly9ha3Zlby5naXRodWIuaW8vZXZhLWljb25zLykgcGFjayBieSBkZWZhdWx0LlxuICpcbiAqIEJhc2ljIGljb24gZXhhbXBsZTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoU2hvd2Nhc2UsIGljb24vaWNvbi1zaG93Y2FzZS5jb21wb25lbnQpXG4gKlxuICogSWNvbiBjb25maWd1cmF0aW9uOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxuYi1pY29uIGljb249XCJzdGFyXCI+PC9uYi1pY29uPlxuICogYGBgXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogQnkgZGVmYXVsdCBOZWJ1bGFyIGNvbWVzIHdpdGhvdXQgYW55IHByZS1pbnN0YWxsZWQgaWNvbiBwYWNrLlxuICogU3RhcnRpbmcgd2l0aCBOZWJ1bGFyIDQuMC4wIHdlIHNoaXAgc2VwYXJhdGUgcGFja2FnZSBjYWxsZWQgYEBuZWJ1bGFyL2V2YS1pY29uc2BcbiAqIHdoaWNoIGludGVncmF0ZXMgU1ZHIFtFdmEgSWNvbnNdKGh0dHBzOi8vYWt2ZW8uZ2l0aHViLmlvL2V2YS1pY29ucy8pIHBhY2sgdG8gTmVidWxhci4gVG8gYWRkIGl0IHRvIHlvdXJcbiAqIHByb2plY3QgcnVuOlxuICogYGBgc2hcbiAqIG5wbSBpIEBuZWJ1bGFyL2V2YS1pY29uc1xuICogYGBgXG4gKiBUaGlzIGNvbW1hbmQgd2lsbCBpbnN0YWxsIEV2YSBJY29ucyBwYWNrLiBUaGVuIHJlZ2lzdGVyIGBOYkV2YUljb25zTW9kdWxlYCBpbnRvIHlvdXIgYXBwIG1vZHVsZTpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBOYkV2YUljb25zTW9kdWxlIH0gZnJvbSAnQG5lYnVsYXIvZXZhLWljb25zJztcbiAqXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLy8gLi4uXG4gKiAgICAgTmJFdmFJY29uc01vZHVsZSxcbiAqICAgXSxcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHsgfVxuICogYGBgXG4gKiBMYXN0IHRoaW5nLCBpbXBvcnQgYE5iSWNvbk1vZHVsZWAgdG8geW91ciBmZWF0dXJlIG1vZHVsZSB3aGVyZSB5b3UgbmVlZCB0byBzaG93IGFuIGljb246XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgTmJJY29uTW9kdWxlIH0gZnJvbSAnQG5lYnVsYXIvdGhlbWUnO1xuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgICBOYkljb25Nb2R1bGUsXG4gKiAgIF0sXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIFBhZ2VNb2R1bGUgeyB9XG4gKiBgYGBcbiAqICMjIyBVc2FnZVxuICpcbiAqIEljb24gY2FuIGJlIGNvbG9yZWQgdXNpbmcgYHN0YXR1c2AgaW5wdXQ6XG4gKiBgYGBodG1sXG4gKiA8bmItaWNvbiBpY29uPVwic3RhclwiIHN0YXR1cz1cIndhcm5pbmdcIj48L25iLWljb24+XG4gKiBgYGBcbiAqXG4gKiBDb2xvcmVkIGljb25zOlxuICogQHN0YWNrZWQtZXhhbXBsZShDb2xvcmVkIEljb25zLCBpY29uL2ljb24tY29sb3JzLmNvbXBvbmVudClcbiAqXG4gKiBJbiBjYXNlIHlvdSBuZWVkIHRvIHNwZWNpZnkgYW4gaWNvbiBmcm9tIGEgc3BlY2lmaWMgaWNvbiBwYWNrLCB0aGlzIGNvdWxkIGJlIGRvbmUgdXNpbmcgYHBhY2tgIGlucHV0IHByb3BlcnR5OlxuICogYGBgaHRtbFxuICogPG5iLWljb24gaWNvbj1cInN0YXJcIiBwYWNrPVwiZm9udC1hd2Vzb21lXCI+PC9uYi1pY29uPlxuICogYGBgXG4gKiBBZGRpdGlvbmFsIGljb24gc2V0dGluZ3MgKGlmIGF2YWlsYWJsZSBieSB0aGUgaWNvbiBwYWNrKSBjb3VsZCBiZSBwYXNzZWQgdXNpbmcgYG9wdGlvbnNgIGlucHV0OlxuICpcbiAqIGBgYGh0bWxcbiAqIDxuYi1pY29uIGljb249XCJzdGFyXCIgW29wdGlvbnNdPVwieyBhbmltYXRpb246IHsgdHlwZTogJ3pvb20nIH0gfVwiPjwvbmItaWNvbj5cbiAqIGBgYFxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBpY29uLWZvbnQtc2l6ZTpcbiAqIGljb24tbGluZS1oZWlnaHQ6XG4gKiBpY29uLXdpZHRoOlxuICogaWNvbi1oZWlnaHQ6XG4gKiBpY29uLXN2Zy12ZXJ0aWNhbC1hbGlnbjpcbiAqIGljb24tYmFzaWMtY29sb3I6XG4gKiBpY29uLXByaW1hcnktY29sb3I6XG4gKiBpY29uLWluZm8tY29sb3I6XG4gKiBpY29uLXN1Y2Nlc3MtY29sb3I6XG4gKiBpY29uLXdhcm5pbmctY29sb3I6XG4gKiBpY29uLWRhbmdlci1jb2xvcjpcbiAqIGljb24tY29udHJvbC1jb2xvcjpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJJY29uQ29tcG9uZW50IGltcGxlbWVudHMgTmJJY29uQ29uZmlnLCBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gICAgcHJvdGVjdGVkIHNhbml0aXplcjogRG9tU2FuaXRpemVyO1xuICAgIHByb3RlY3RlZCBpY29uTGlicmFyeTogTmJJY29uTGlicmFyaWVzO1xuICAgIHByb3RlY3RlZCBlbDogRWxlbWVudFJlZjtcbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcm90ZWN0ZWQgaWNvbkRlZjogYW55O1xuICAgIHByb3RlY3RlZCBwcmV2Q2xhc3NlczogYW55W107XG4gICAgaHRtbDogU2FmZUh0bWw7XG4gICAgZ2V0IHByaW1hcnkoKTogYm9vbGVhbjtcbiAgICBnZXQgaW5mbygpOiBib29sZWFuO1xuICAgIGdldCBzdWNjZXNzKCk6IGJvb2xlYW47XG4gICAgZ2V0IHdhcm5pbmcoKTogYm9vbGVhbjtcbiAgICBnZXQgZGFuZ2VyKCk6IGJvb2xlYW47XG4gICAgZ2V0IGJhc2ljKCk6IGJvb2xlYW47XG4gICAgZ2V0IGNvbnRyb2woKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBJY29uIG5hbWVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3RhdHVzXG4gICAgICovXG4gICAgaWNvbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEljb24gcGFjayBuYW1lXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHN0YXR1c1xuICAgICAqL1xuICAgIHBhY2s6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBBZGRpdGlvbmFsIGljb24gc2V0dGluZ3NcbiAgICAgKiBAcGFyYW0ge1tuYW1lOiBzdHJpbmddOiBhbnl9XG4gICAgICovXG4gICAgb3B0aW9uczoge1xuICAgICAgICBbbmFtZTogc3RyaW5nXTogYW55O1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSWNvbiBzdGF0dXMgKGFkZHMgc3BlY2lmaWMgc3R5bGVzKTpcbiAgICAgKiBgYmFzaWNgLCBgcHJpbWFyeWAsIGBpbmZvYCwgYHN1Y2Nlc3NgLCBgd2FybmluZ2AsIGBkYW5nZXJgLCBgY29udHJvbGBcbiAgICAgKi9cbiAgICBzdGF0dXM/OiBOYkNvbXBvbmVudFN0YXR1cztcbiAgICAvKipcbiAgICAgKiBTZXRzIGFsbCBpY29uIGNvbmZpZ3VyYWJsZSBwcm9wZXJ0aWVzIHZpYSBjb25maWcgb2JqZWN0LlxuICAgICAqIElmIHBhc3NlZCB2YWx1ZSBpcyBhIHN0cmluZyBzZXQgaWNvbiBuYW1lLlxuICAgICAqIEBkb2NzLXByaXZhdGVcbiAgICAgKi9cbiAgICBnZXQgY29uZmlnKCk6IHN0cmluZyB8IE5iSWNvbkNvbmZpZztcbiAgICBzZXQgY29uZmlnKHZhbHVlOiBzdHJpbmcgfCBOYkljb25Db25maWcpO1xuICAgIHByb3RlY3RlZCBfY29uZmlnOiBzdHJpbmcgfCBOYkljb25Db25maWc7XG4gICAgY29uc3RydWN0b3Ioc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIGljb25MaWJyYXJ5OiBOYkljb25MaWJyYXJpZXMsIGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgcmVuZGVySWNvbihuYW1lOiBzdHJpbmcsIHBhY2s/OiBzdHJpbmcsIG9wdGlvbnM/OiB7XG4gICAgICAgIFtuYW1lOiBzdHJpbmddOiBhbnk7XG4gICAgfSk6IGltcG9ydChcIi4vaWNvbi1saWJyYXJpZXNcIikuTmJJY29uRGVmaW5pdGlvbjtcbiAgICBwcm90ZWN0ZWQgYXNzaWduQ2xhc3NlcyhjbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQ7XG59XG4iXX0=
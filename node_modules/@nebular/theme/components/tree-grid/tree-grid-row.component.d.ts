import { ElementRef, OnDestroy } from '@angular/core';
import { NbFooterRowComponent, NbHeaderRowComponent, NbRowComponent } from '../cdk/table/row';
import * as ɵngcc0 from '@angular/core';
export declare const NB_ROW_DOUBLE_CLICK_DELAY: number;
/**
 * Cells container. Adds the right class and role.
 */
export declare class NbTreeGridRowComponent extends NbRowComponent implements OnDestroy {
    elementRef: ElementRef<HTMLElement>;
    private readonly doubleClick$;
    private readonly tree;
    /**
     * Time to wait for second click to expand row deeply.
     * 200ms by default.
     */
    doubleClickDelay: number;
    /**
     * Toggle row on click. Enabled by default.
     */
    clickToToggle: boolean;
    toggleIfEnabledNode(): void;
    toggleIfEnabledNodeDeep(): void;
    constructor(tree: any, elementRef: ElementRef<HTMLElement>);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbTreeGridRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbTreeGridRowComponent, "tr[nbTreeGridRow]", never, { "doubleClickDelay": "doubleClickDelay"; "clickToToggle": "clickToToggle"; }, {}, never, never>;
}
export declare class NbTreeGridHeaderRowComponent extends NbHeaderRowComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbTreeGridHeaderRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbTreeGridHeaderRowComponent, "tr[nbTreeGridHeaderRow]", never, {}, {}, never, never>;
}
export declare class NbTreeGridFooterRowComponent extends NbFooterRowComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbTreeGridFooterRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbTreeGridFooterRowComponent, "tr[nbTreeGridFooterRow]", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ncmlkLXJvdy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidHJlZS1ncmlkLXJvdy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iRm9vdGVyUm93Q29tcG9uZW50LCBOYkhlYWRlclJvd0NvbXBvbmVudCwgTmJSb3dDb21wb25lbnQgfSBmcm9tICcuLi9jZGsvdGFibGUvcm93JztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE5CX1JPV19ET1VCTEVfQ0xJQ0tfREVMQVk6IG51bWJlcjtcbi8qKlxuICogQ2VsbHMgY29udGFpbmVyLiBBZGRzIHRoZSByaWdodCBjbGFzcyBhbmQgcm9sZS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJUcmVlR3JpZFJvd0NvbXBvbmVudCBleHRlbmRzIE5iUm93Q29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRvdWJsZUNsaWNrJDtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHRyZWU7XG4gICAgLyoqXG4gICAgICogVGltZSB0byB3YWl0IGZvciBzZWNvbmQgY2xpY2sgdG8gZXhwYW5kIHJvdyBkZWVwbHkuXG4gICAgICogMjAwbXMgYnkgZGVmYXVsdC5cbiAgICAgKi9cbiAgICBkb3VibGVDbGlja0RlbGF5OiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHJvdyBvbiBjbGljay4gRW5hYmxlZCBieSBkZWZhdWx0LlxuICAgICAqL1xuICAgIGNsaWNrVG9Ub2dnbGU6IGJvb2xlYW47XG4gICAgdG9nZ2xlSWZFbmFibGVkTm9kZSgpOiB2b2lkO1xuICAgIHRvZ2dsZUlmRW5hYmxlZE5vZGVEZWVwKCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IodHJlZTogYW55LCBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pik7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iVHJlZUdyaWRIZWFkZXJSb3dDb21wb25lbnQgZXh0ZW5kcyBOYkhlYWRlclJvd0NvbXBvbmVudCB7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlRyZWVHcmlkRm9vdGVyUm93Q29tcG9uZW50IGV4dGVuZHMgTmJGb290ZXJSb3dDb21wb25lbnQge1xufVxuIl19
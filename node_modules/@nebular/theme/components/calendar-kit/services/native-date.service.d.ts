/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { DatePipe, TranslationWidth } from '@angular/common';
import { NbDateService } from './date.service';
/**
 * The `NbNativeDateService` is basic implementation of `NbDateService` using
 * native js date objects and angular localization services.
 * */
import * as ɵngcc0 from '@angular/core';
export declare class NbNativeDateService extends NbDateService<Date> {
    protected datePipe: DatePipe;
    constructor(locale: string);
    setLocale(locale: string): void;
    isValidDateString(date: string, format: string): boolean;
    today(): Date;
    getDate(date: Date): number;
    getMonth(date: Date): number;
    getYear(date: Date): number;
    getDayOfWeek(date: Date): number;
    /**
     * returns first day of the week, it can be 1 if week starts from monday
     * and 0 if from sunday and so on.
     * */
    getFirstDayOfWeek(): number;
    getMonthName(date: Date, style?: TranslationWidth): string;
    getMonthNameByIndex(index: number, style?: TranslationWidth): string;
    getDayOfWeekNames(): string[];
    format(date: Date, format: string): string;
    /**
     * We haven't got capability to parse date using formatting without third party libraries.
     * */
    parse(date: string, format: string): Date;
    addDay(date: Date, num: number): Date;
    addMonth(date: Date, num: number): Date;
    addYear(date: Date, num: number): Date;
    clone(date: Date): Date;
    compareDates(date1: Date, date2: Date): number;
    createDate(year: number, month: number, date: number): Date;
    getMonthEnd(date: Date): Date;
    getMonthStart(date: Date): Date;
    getNumberOfDaysInMonth(date: Date): number;
    getYearEnd(date: Date): Date;
    getYearStart(date: Date): Date;
    isSameDay(date1: Date, date2: Date): boolean;
    isSameMonth(date1: Date, date2: Date): boolean;
    isSameYear(date1: Date, date2: Date): boolean;
    getId(): string;
    getWeekNumber(date: Date): number;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbNativeDateService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbNativeDateService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRhdGUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJuYXRpdmUtZGF0ZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgRGF0ZVBpcGUsIFRyYW5zbGF0aW9uV2lkdGggfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmJEYXRlU2VydmljZSB9IGZyb20gJy4vZGF0ZS5zZXJ2aWNlJztcbi8qKlxuICogVGhlIGBOYk5hdGl2ZURhdGVTZXJ2aWNlYCBpcyBiYXNpYyBpbXBsZW1lbnRhdGlvbiBvZiBgTmJEYXRlU2VydmljZWAgdXNpbmdcbiAqIG5hdGl2ZSBqcyBkYXRlIG9iamVjdHMgYW5kIGFuZ3VsYXIgbG9jYWxpemF0aW9uIHNlcnZpY2VzLlxuICogKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iTmF0aXZlRGF0ZVNlcnZpY2UgZXh0ZW5kcyBOYkRhdGVTZXJ2aWNlPERhdGU+IHtcbiAgICBwcm90ZWN0ZWQgZGF0ZVBpcGU6IERhdGVQaXBlO1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsZTogc3RyaW5nKTtcbiAgICBzZXRMb2NhbGUobG9jYWxlOiBzdHJpbmcpOiB2b2lkO1xuICAgIGlzVmFsaWREYXRlU3RyaW5nKGRhdGU6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIHRvZGF5KCk6IERhdGU7XG4gICAgZ2V0RGF0ZShkYXRlOiBEYXRlKTogbnVtYmVyO1xuICAgIGdldE1vbnRoKGRhdGU6IERhdGUpOiBudW1iZXI7XG4gICAgZ2V0WWVhcihkYXRlOiBEYXRlKTogbnVtYmVyO1xuICAgIGdldERheU9mV2VlayhkYXRlOiBEYXRlKTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIHJldHVybnMgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLCBpdCBjYW4gYmUgMSBpZiB3ZWVrIHN0YXJ0cyBmcm9tIG1vbmRheVxuICAgICAqIGFuZCAwIGlmIGZyb20gc3VuZGF5IGFuZCBzbyBvbi5cbiAgICAgKiAqL1xuICAgIGdldEZpcnN0RGF5T2ZXZWVrKCk6IG51bWJlcjtcbiAgICBnZXRNb250aE5hbWUoZGF0ZTogRGF0ZSwgc3R5bGU/OiBUcmFuc2xhdGlvbldpZHRoKTogc3RyaW5nO1xuICAgIGdldE1vbnRoTmFtZUJ5SW5kZXgoaW5kZXg6IG51bWJlciwgc3R5bGU/OiBUcmFuc2xhdGlvbldpZHRoKTogc3RyaW5nO1xuICAgIGdldERheU9mV2Vla05hbWVzKCk6IHN0cmluZ1tdO1xuICAgIGZvcm1hdChkYXRlOiBEYXRlLCBmb3JtYXQ6IHN0cmluZyk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBXZSBoYXZlbid0IGdvdCBjYXBhYmlsaXR5IHRvIHBhcnNlIGRhdGUgdXNpbmcgZm9ybWF0dGluZyB3aXRob3V0IHRoaXJkIHBhcnR5IGxpYnJhcmllcy5cbiAgICAgKiAqL1xuICAgIHBhcnNlKGRhdGU6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcpOiBEYXRlO1xuICAgIGFkZERheShkYXRlOiBEYXRlLCBudW06IG51bWJlcik6IERhdGU7XG4gICAgYWRkTW9udGgoZGF0ZTogRGF0ZSwgbnVtOiBudW1iZXIpOiBEYXRlO1xuICAgIGFkZFllYXIoZGF0ZTogRGF0ZSwgbnVtOiBudW1iZXIpOiBEYXRlO1xuICAgIGNsb25lKGRhdGU6IERhdGUpOiBEYXRlO1xuICAgIGNvbXBhcmVEYXRlcyhkYXRlMTogRGF0ZSwgZGF0ZTI6IERhdGUpOiBudW1iZXI7XG4gICAgY3JlYXRlRGF0ZSh5ZWFyOiBudW1iZXIsIG1vbnRoOiBudW1iZXIsIGRhdGU6IG51bWJlcik6IERhdGU7XG4gICAgZ2V0TW9udGhFbmQoZGF0ZTogRGF0ZSk6IERhdGU7XG4gICAgZ2V0TW9udGhTdGFydChkYXRlOiBEYXRlKTogRGF0ZTtcbiAgICBnZXROdW1iZXJPZkRheXNJbk1vbnRoKGRhdGU6IERhdGUpOiBudW1iZXI7XG4gICAgZ2V0WWVhckVuZChkYXRlOiBEYXRlKTogRGF0ZTtcbiAgICBnZXRZZWFyU3RhcnQoZGF0ZTogRGF0ZSk6IERhdGU7XG4gICAgaXNTYW1lRGF5KGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSk6IGJvb2xlYW47XG4gICAgaXNTYW1lTW9udGgoZGF0ZTE6IERhdGUsIGRhdGUyOiBEYXRlKTogYm9vbGVhbjtcbiAgICBpc1NhbWVZZWFyKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSk6IGJvb2xlYW47XG4gICAgZ2V0SWQoKTogc3RyaW5nO1xuICAgIGdldFdlZWtOdW1iZXIoZGF0ZTogRGF0ZSk6IG51bWJlcjtcbn1cbiJdfQ==
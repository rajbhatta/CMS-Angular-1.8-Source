/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter, OnChanges, Type, SimpleChanges } from '@angular/core';
import { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';
import { NbDateService } from '../../services/date.service';
import * as ɵngcc0 from '@angular/core';
export declare const MONTHS_IN_VIEW = 12;
export declare const MONTHS_IN_COLUMN = 4;
export declare class NbCalendarMonthPickerComponent<D, T> implements OnChanges {
    protected dateService: NbDateService<D>;
    min: D;
    max: D;
    filter: (D: any) => boolean;
    size: NbCalendarSize;
    static ngAcceptInputType_size: NbCalendarSizeValues;
    /**
     * Visible month
     **/
    month: D;
    /**
     * Selected date
     **/
    date: D;
    monthChange: EventEmitter<D>;
    months: D[][];
    constructor(dateService: NbDateService<D>);
    set _cellComponent(cellComponent: Type<NbCalendarCell<D, T>>);
    cellComponent: Type<NbCalendarCell<any, any>>;
    get large(): boolean;
    ngOnChanges(changes: SimpleChanges): void;
    initMonths(): void;
    onSelect(month: D): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarMonthPickerComponent<any, any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarMonthPickerComponent<any, any>, "nb-calendar-month-picker", never, { "size": "size"; "_cellComponent": "cellComponent"; "min": "min"; "max": "max"; "filter": "filter"; "month": "month"; "date": "date"; }, { "monthChange": "monthChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItbW9udGgtcGlja2VyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1tb250aC1waWNrZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBUeXBlLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyQ2VsbCwgTmJDYWxlbmRhclNpemUsIE5iQ2FsZW5kYXJTaXplVmFsdWVzIH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuaW1wb3J0IHsgTmJEYXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2RhdGUuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBNT05USFNfSU5fVklFVyA9IDEyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgTU9OVEhTX0lOX0NPTFVNTiA9IDQ7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhbGVuZGFyTW9udGhQaWNrZXJDb21wb25lbnQ8RCwgVD4gaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByb3RlY3RlZCBkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPjtcbiAgICBtaW46IEQ7XG4gICAgbWF4OiBEO1xuICAgIGZpbHRlcjogKEQ6IGFueSkgPT4gYm9vbGVhbjtcbiAgICBzaXplOiBOYkNhbGVuZGFyU2l6ZTtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfc2l6ZTogTmJDYWxlbmRhclNpemVWYWx1ZXM7XG4gICAgLyoqXG4gICAgICogVmlzaWJsZSBtb250aFxuICAgICAqKi9cbiAgICBtb250aDogRDtcbiAgICAvKipcbiAgICAgKiBTZWxlY3RlZCBkYXRlXG4gICAgICoqL1xuICAgIGRhdGU6IEQ7XG4gICAgbW9udGhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxEPjtcbiAgICBtb250aHM6IERbXVtdO1xuICAgIGNvbnN0cnVjdG9yKGRhdGVTZXJ2aWNlOiBOYkRhdGVTZXJ2aWNlPEQ+KTtcbiAgICBzZXQgX2NlbGxDb21wb25lbnQoY2VsbENvbXBvbmVudDogVHlwZTxOYkNhbGVuZGFyQ2VsbDxELCBUPj4pO1xuICAgIGNlbGxDb21wb25lbnQ6IFR5cGU8TmJDYWxlbmRhckNlbGw8YW55LCBhbnk+PjtcbiAgICBnZXQgbGFyZ2UoKTogYm9vbGVhbjtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBpbml0TW9udGhzKCk6IHZvaWQ7XG4gICAgb25TZWxlY3QobW9udGg6IEQpOiB2b2lkO1xufVxuIl19
/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NbBooleanInput } from '../helpers';
import { NbComponentSize } from '../component-size';
import { NbComponentStatus } from '../component-status';
import { NbBadgePosition } from '../badge/badge.component';
import { NbIconConfig } from '../icon/icon.component';
/**
 * Action item, display a link with an icon, or any other content provided instead.
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbActionComponent {
    /**
     * Router link to use
     * @type string
     */
    link: string;
    /**
     * Regular HREF link
     * @type: string
     */
    href: string;
    /**
     * Optional title for mouseover
     * @type string
     */
    title: string;
    /**
     * Icon name or config object
     * @type {string | NbIconConfig}
     */
    icon: string | NbIconConfig;
    /**
     * Visually disables the item
     * @type boolean
     */
    get disabled(): boolean;
    set disabled(value: boolean);
    protected _disabled: boolean;
    static ngAcceptInputType_disabled: NbBooleanInput;
    /**
     * Badge text to display
     * @type string
     */
    badgeText: string;
    /**
     * Badge status (adds specific styles):
     * 'primary', 'info', 'success', 'warning', 'danger'
     * @param {string} val
     */
    badgeStatus: NbComponentStatus;
    /**
     * Badge position.
     * Can be set to any class or to one of predefined positions:
     * 'top left', 'top right', 'bottom left', 'bottom right',
     * 'top start', 'top end', 'bottom start', 'bottom end'
     * @type string
     */
    badgePosition: NbBadgePosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbActionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbActionComponent, "nb-action", never, { "title": "title"; "badgeStatus": "badgeStatus"; "disabled": "disabled"; "link": "link"; "href": "href"; "icon": "icon"; "badgeText": "badgeText"; "badgePosition": "badgePosition"; }, {}, never, ["*"]>;
}
/**
 * Shows a horizontal list of actions, available in multiple sizes.
 * Aligns items vertically.
 *
 * @stacked-example(Showcase, action/action-showcase.component)
 *
 * Basic actions setup:
 * ```html
 * <nb-actions size="small">
 *   <nb-action icon="nb-search"></nb-action>
 *   <nb-action icon="nb-power-circled"></nb-action>
 *   <nb-action icon="nb-person"></nb-action>
 * </nb-actions>
 * ```
 * ### Installation
 *
 * Import `NbActionsModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbActionsModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Multiple sizes example:
 * @stacked-example(Multiple Sizes, action/action-sizes.component)
 *
 * It is also possible to specify a `badge` value:
 *
 * @stacked-example(Action Badge, action/action-badge.component)
 *
 * and we can set it to full a width of a parent component
 * @stacked-example(Full Width, action/action-width.component)
 *
 * @styles
 *
 * actions-background-color:
 * actions-divider-color:
 * actions-divider-style:
 * actions-divider-width:
 * actions-icon-color:
 * actions-text-color:
 * actions-text-font-family:
 * actions-text-font-weight:
 * actions-text-line-height:
 * actions-disabled-icon-color:
 * actions-disabled-text-color:
 * actions-tiny-height:
 * actions-tiny-icon-height:
 * actions-tiny-padding:
 * actions-tiny-text-font-size:
 * actions-small-height:
 * actions-small-icon-height:
 * actions-small-padding:
 * actions-small-text-font-size:
 * actions-medium-height:
 * actions-medium-icon-height:
 * actions-medium-padding:
 * actions-medium-text-font-size:
 * actions-large-height:
 * actions-large-icon-height:
 * actions-large-padding:
 * actions-large-text-font-size:
 * actions-giant-height:
 * actions-giant-icon-height:
 * actions-giant-padding:
 * actions-giant-text-font-size:
 */
export declare class NbActionsComponent {
    /**
     * Size of the component: 'tiny', 'small' (default), 'medium', 'large', 'giant'
     */
    get size(): NbComponentSize;
    set size(value: NbComponentSize);
    protected _size: NbComponentSize;
    /**
     * Component will fill full width of the container
     */
    get fullWidth(): boolean;
    set fullWidth(value: boolean);
    protected _fullWidth: boolean;
    static ngAcceptInputType_fullWidth: NbBooleanInput;
    get tiny(): boolean;
    get small(): boolean;
    get medium(): boolean;
    get large(): boolean;
    get giant(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbActionsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbActionsComponent, "nb-actions", never, { "size": "size"; "fullWidth": "fullWidth"; }, {}, never, ["nb-action"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYWN0aW9ucy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgTmJCb29sZWFuSW5wdXQgfSBmcm9tICcuLi9oZWxwZXJzJztcbmltcG9ydCB7IE5iQ29tcG9uZW50U2l6ZSB9IGZyb20gJy4uL2NvbXBvbmVudC1zaXplJztcbmltcG9ydCB7IE5iQ29tcG9uZW50U3RhdHVzIH0gZnJvbSAnLi4vY29tcG9uZW50LXN0YXR1cyc7XG5pbXBvcnQgeyBOYkJhZGdlUG9zaXRpb24gfSBmcm9tICcuLi9iYWRnZS9iYWRnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmJJY29uQ29uZmlnIH0gZnJvbSAnLi4vaWNvbi9pY29uLmNvbXBvbmVudCc7XG4vKipcbiAqIEFjdGlvbiBpdGVtLCBkaXNwbGF5IGEgbGluayB3aXRoIGFuIGljb24sIG9yIGFueSBvdGhlciBjb250ZW50IHByb3ZpZGVkIGluc3RlYWQuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQWN0aW9uQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBSb3V0ZXIgbGluayB0byB1c2VcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKi9cbiAgICBsaW5rOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogUmVndWxhciBIUkVGIGxpbmtcbiAgICAgKiBAdHlwZTogc3RyaW5nXG4gICAgICovXG4gICAgaHJlZjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIE9wdGlvbmFsIHRpdGxlIGZvciBtb3VzZW92ZXJcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEljb24gbmFtZSBvciBjb25maWcgb2JqZWN0XG4gICAgICogQHR5cGUge3N0cmluZyB8IE5iSWNvbkNvbmZpZ31cbiAgICAgKi9cbiAgICBpY29uOiBzdHJpbmcgfCBOYkljb25Db25maWc7XG4gICAgLyoqXG4gICAgICogVmlzdWFsbHkgZGlzYWJsZXMgdGhlIGl0ZW1cbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICovXG4gICAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuKTtcbiAgICBwcm90ZWN0ZWQgX2Rpc2FibGVkOiBib29sZWFuO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9kaXNhYmxlZDogTmJCb29sZWFuSW5wdXQ7XG4gICAgLyoqXG4gICAgICogQmFkZ2UgdGV4dCB0byBkaXNwbGF5XG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICovXG4gICAgYmFkZ2VUZXh0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQmFkZ2Ugc3RhdHVzIChhZGRzIHNwZWNpZmljIHN0eWxlcyk6XG4gICAgICogJ3ByaW1hcnknLCAnaW5mbycsICdzdWNjZXNzJywgJ3dhcm5pbmcnLCAnZGFuZ2VyJ1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWxcbiAgICAgKi9cbiAgICBiYWRnZVN0YXR1czogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgLyoqXG4gICAgICogQmFkZ2UgcG9zaXRpb24uXG4gICAgICogQ2FuIGJlIHNldCB0byBhbnkgY2xhc3Mgb3IgdG8gb25lIG9mIHByZWRlZmluZWQgcG9zaXRpb25zOlxuICAgICAqICd0b3AgbGVmdCcsICd0b3AgcmlnaHQnLCAnYm90dG9tIGxlZnQnLCAnYm90dG9tIHJpZ2h0JyxcbiAgICAgKiAndG9wIHN0YXJ0JywgJ3RvcCBlbmQnLCAnYm90dG9tIHN0YXJ0JywgJ2JvdHRvbSBlbmQnXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICovXG4gICAgYmFkZ2VQb3NpdGlvbjogTmJCYWRnZVBvc2l0aW9uO1xufVxuLyoqXG4gKiBTaG93cyBhIGhvcml6b250YWwgbGlzdCBvZiBhY3Rpb25zLCBhdmFpbGFibGUgaW4gbXVsdGlwbGUgc2l6ZXMuXG4gKiBBbGlnbnMgaXRlbXMgdmVydGljYWxseS5cbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKFNob3djYXNlLCBhY3Rpb24vYWN0aW9uLXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiBCYXNpYyBhY3Rpb25zIHNldHVwOlxuICogYGBgaHRtbFxuICogPG5iLWFjdGlvbnMgc2l6ZT1cInNtYWxsXCI+XG4gKiAgIDxuYi1hY3Rpb24gaWNvbj1cIm5iLXNlYXJjaFwiPjwvbmItYWN0aW9uPlxuICogICA8bmItYWN0aW9uIGljb249XCJuYi1wb3dlci1jaXJjbGVkXCI+PC9uYi1hY3Rpb24+XG4gKiAgIDxuYi1hY3Rpb24gaWNvbj1cIm5iLXBlcnNvblwiPjwvbmItYWN0aW9uPlxuICogPC9uYi1hY3Rpb25zPlxuICogYGBgXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYkFjdGlvbnNNb2R1bGVgIHRvIHlvdXIgZmVhdHVyZSBtb2R1bGUuXG4gKiBgYGB0c1xuICogQE5nTW9kdWxlKHtcbiAqICAgaW1wb3J0czogW1xuICogICAgIC8vIC4uLlxuICogICAgIE5iQWN0aW9uc01vZHVsZSxcbiAqICAgXSxcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgUGFnZU1vZHVsZSB7IH1cbiAqIGBgYFxuICogIyMjIFVzYWdlXG4gKlxuICogTXVsdGlwbGUgc2l6ZXMgZXhhbXBsZTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoTXVsdGlwbGUgU2l6ZXMsIGFjdGlvbi9hY3Rpb24tc2l6ZXMuY29tcG9uZW50KVxuICpcbiAqIEl0IGlzIGFsc28gcG9zc2libGUgdG8gc3BlY2lmeSBhIGBiYWRnZWAgdmFsdWU6XG4gKlxuICogQHN0YWNrZWQtZXhhbXBsZShBY3Rpb24gQmFkZ2UsIGFjdGlvbi9hY3Rpb24tYmFkZ2UuY29tcG9uZW50KVxuICpcbiAqIGFuZCB3ZSBjYW4gc2V0IGl0IHRvIGZ1bGwgYSB3aWR0aCBvZiBhIHBhcmVudCBjb21wb25lbnRcbiAqIEBzdGFja2VkLWV4YW1wbGUoRnVsbCBXaWR0aCwgYWN0aW9uL2FjdGlvbi13aWR0aC5jb21wb25lbnQpXG4gKlxuICogQHN0eWxlc1xuICpcbiAqIGFjdGlvbnMtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGFjdGlvbnMtZGl2aWRlci1jb2xvcjpcbiAqIGFjdGlvbnMtZGl2aWRlci1zdHlsZTpcbiAqIGFjdGlvbnMtZGl2aWRlci13aWR0aDpcbiAqIGFjdGlvbnMtaWNvbi1jb2xvcjpcbiAqIGFjdGlvbnMtdGV4dC1jb2xvcjpcbiAqIGFjdGlvbnMtdGV4dC1mb250LWZhbWlseTpcbiAqIGFjdGlvbnMtdGV4dC1mb250LXdlaWdodDpcbiAqIGFjdGlvbnMtdGV4dC1saW5lLWhlaWdodDpcbiAqIGFjdGlvbnMtZGlzYWJsZWQtaWNvbi1jb2xvcjpcbiAqIGFjdGlvbnMtZGlzYWJsZWQtdGV4dC1jb2xvcjpcbiAqIGFjdGlvbnMtdGlueS1oZWlnaHQ6XG4gKiBhY3Rpb25zLXRpbnktaWNvbi1oZWlnaHQ6XG4gKiBhY3Rpb25zLXRpbnktcGFkZGluZzpcbiAqIGFjdGlvbnMtdGlueS10ZXh0LWZvbnQtc2l6ZTpcbiAqIGFjdGlvbnMtc21hbGwtaGVpZ2h0OlxuICogYWN0aW9ucy1zbWFsbC1pY29uLWhlaWdodDpcbiAqIGFjdGlvbnMtc21hbGwtcGFkZGluZzpcbiAqIGFjdGlvbnMtc21hbGwtdGV4dC1mb250LXNpemU6XG4gKiBhY3Rpb25zLW1lZGl1bS1oZWlnaHQ6XG4gKiBhY3Rpb25zLW1lZGl1bS1pY29uLWhlaWdodDpcbiAqIGFjdGlvbnMtbWVkaXVtLXBhZGRpbmc6XG4gKiBhY3Rpb25zLW1lZGl1bS10ZXh0LWZvbnQtc2l6ZTpcbiAqIGFjdGlvbnMtbGFyZ2UtaGVpZ2h0OlxuICogYWN0aW9ucy1sYXJnZS1pY29uLWhlaWdodDpcbiAqIGFjdGlvbnMtbGFyZ2UtcGFkZGluZzpcbiAqIGFjdGlvbnMtbGFyZ2UtdGV4dC1mb250LXNpemU6XG4gKiBhY3Rpb25zLWdpYW50LWhlaWdodDpcbiAqIGFjdGlvbnMtZ2lhbnQtaWNvbi1oZWlnaHQ6XG4gKiBhY3Rpb25zLWdpYW50LXBhZGRpbmc6XG4gKiBhY3Rpb25zLWdpYW50LXRleHQtZm9udC1zaXplOlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkFjdGlvbnNDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIFNpemUgb2YgdGhlIGNvbXBvbmVudDogJ3RpbnknLCAnc21hbGwnIChkZWZhdWx0KSwgJ21lZGl1bScsICdsYXJnZScsICdnaWFudCdcbiAgICAgKi9cbiAgICBnZXQgc2l6ZSgpOiBOYkNvbXBvbmVudFNpemU7XG4gICAgc2V0IHNpemUodmFsdWU6IE5iQ29tcG9uZW50U2l6ZSk7XG4gICAgcHJvdGVjdGVkIF9zaXplOiBOYkNvbXBvbmVudFNpemU7XG4gICAgLyoqXG4gICAgICogQ29tcG9uZW50IHdpbGwgZmlsbCBmdWxsIHdpZHRoIG9mIHRoZSBjb250YWluZXJcbiAgICAgKi9cbiAgICBnZXQgZnVsbFdpZHRoKCk6IGJvb2xlYW47XG4gICAgc2V0IGZ1bGxXaWR0aCh2YWx1ZTogYm9vbGVhbik7XG4gICAgcHJvdGVjdGVkIF9mdWxsV2lkdGg6IGJvb2xlYW47XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX2Z1bGxXaWR0aDogTmJCb29sZWFuSW5wdXQ7XG4gICAgZ2V0IHRpbnkoKTogYm9vbGVhbjtcbiAgICBnZXQgc21hbGwoKTogYm9vbGVhbjtcbiAgICBnZXQgbWVkaXVtKCk6IGJvb2xlYW47XG4gICAgZ2V0IGxhcmdlKCk6IGJvb2xlYW47XG4gICAgZ2V0IGdpYW50KCk6IGJvb2xlYW47XG59XG4iXX0=
/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NbComponentStatus } from '../component-status';
import * as ɵngcc0 from '@angular/core';
export declare type NbBadgePhysicalPosition = 'top left' | 'top right' | 'bottom left' | 'bottom right';
export declare type NbBadgeLogicalPosition = 'top start' | 'top end' | 'bottom start' | 'bottom end';
export declare type NbBadgePosition = NbBadgePhysicalPosition | NbBadgeLogicalPosition;
/**
 * Badge is a simple labeling component.
 * It can be used to add additional information to any content or highlight unread items.
 *
 * Element is absolute positioned, so parent should be
 * [positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).
 * It means parent `position` should be set to anything except `static`, e.g. `relative`,
 * `absolute`, `fixed`, or `sticky`.
 *
 * ### Installation
 *
 * Import `NbBadgeModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbBadgeModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Badge with default position and status(color):
 *
 * ```html
 * <nb-badge text="badgeText"></nb-badge>
 * ```
 *
 * For example, badge can be placed into nb-card header:
 * @stacked-example(Showcase, badge/badge-showcase.component)
 *
 * Badge located on the bottom right with warning status:
 *
 * ```html
 * <nb-badge text="badgeText" status="warning" position="bottom right">
 * </nb-badge>
 * ```
 *
 * @styles
 *
 * badge-border-radius:
 * badge-text-font-family:
 * badge-text-font-size:
 * badge-text-font-weight:
 * badge-text-line-height:
 * badge-padding:
 * badge-basic-background-color:
 * badge-basic-text-color:
 * badge-primary-background-color:
 * badge-primary-text-color:
 * badge-success-background-color:
 * badge-success-text-color:
 * badge-info-background-color:
 * badge-info-text-color:
 * badge-warning-background-color:
 * badge-warning-text-color:
 * badge-danger-background-color:
 * badge-danger-text-color:
 * badge-control-background-color:
 * badge-control-text-color:
 */
export declare class NbBadgeComponent {
    /**
     * Text to display
     * @type string
     */
    text: string;
    /**
     * Badge position
     *
     * Can be set to any class or to one of predefined positions:
     * 'top left', 'top right', 'bottom left', 'bottom right',
     * 'top start', 'top end', 'bottom start', 'bottom end'
     * @type string
     */
    get position(): NbBadgePosition;
    set position(value: NbBadgePosition);
    protected _defaultPosition: NbBadgePosition;
    protected _position: NbBadgePosition;
    /**
     * Badge status (adds specific styles):
     * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'
     */
    get status(): NbComponentStatus;
    set status(value: NbComponentStatus);
    protected _status: NbComponentStatus;
    get primary(): boolean;
    get success(): boolean;
    get info(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    get top(): boolean;
    get right(): boolean;
    get bottom(): boolean;
    get left(): boolean;
    get start(): boolean;
    get end(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbBadgeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbBadgeComponent, "nb-badge", never, { "text": "text"; "position": "position"; "status": "status"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImJhZGdlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBOYkNvbXBvbmVudFN0YXR1cyB9IGZyb20gJy4uL2NvbXBvbmVudC1zdGF0dXMnO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYkJhZGdlUGh5c2ljYWxQb3NpdGlvbiA9ICd0b3AgbGVmdCcgfCAndG9wIHJpZ2h0JyB8ICdib3R0b20gbGVmdCcgfCAnYm90dG9tIHJpZ2h0JztcbmV4cG9ydCBkZWNsYXJlIHR5cGUgTmJCYWRnZUxvZ2ljYWxQb3NpdGlvbiA9ICd0b3Agc3RhcnQnIHwgJ3RvcCBlbmQnIHwgJ2JvdHRvbSBzdGFydCcgfCAnYm90dG9tIGVuZCc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iQmFkZ2VQb3NpdGlvbiA9IE5iQmFkZ2VQaHlzaWNhbFBvc2l0aW9uIHwgTmJCYWRnZUxvZ2ljYWxQb3NpdGlvbjtcbi8qKlxuICogQmFkZ2UgaXMgYSBzaW1wbGUgbGFiZWxpbmcgY29tcG9uZW50LlxuICogSXQgY2FuIGJlIHVzZWQgdG8gYWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gYW55IGNvbnRlbnQgb3IgaGlnaGxpZ2h0IHVucmVhZCBpdGVtcy5cbiAqXG4gKiBFbGVtZW50IGlzIGFic29sdXRlIHBvc2l0aW9uZWQsIHNvIHBhcmVudCBzaG91bGQgYmVcbiAqIFtwb3NpdGlvbmVkIGVsZW1lbnRdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9wb3NpdGlvbikuXG4gKiBJdCBtZWFucyBwYXJlbnQgYHBvc2l0aW9uYCBzaG91bGQgYmUgc2V0IHRvIGFueXRoaW5nIGV4Y2VwdCBgc3RhdGljYCwgZS5nLiBgcmVsYXRpdmVgLFxuICogYGFic29sdXRlYCwgYGZpeGVkYCwgb3IgYHN0aWNreWAuXG4gKlxuICogIyMjIEluc3RhbGxhdGlvblxuICpcbiAqIEltcG9ydCBgTmJCYWRnZU1vZHVsZWAgdG8geW91ciBmZWF0dXJlIG1vZHVsZS5cbiAqIGBgYHRzXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLy8gLi4uXG4gKiAgICAgTmJCYWRnZU1vZHVsZSxcbiAqICAgXSxcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgUGFnZU1vZHVsZSB7IH1cbiAqIGBgYFxuICogIyMjIFVzYWdlXG4gKlxuICogQmFkZ2Ugd2l0aCBkZWZhdWx0IHBvc2l0aW9uIGFuZCBzdGF0dXMoY29sb3IpOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxuYi1iYWRnZSB0ZXh0PVwiYmFkZ2VUZXh0XCI+PC9uYi1iYWRnZT5cbiAqIGBgYFxuICpcbiAqIEZvciBleGFtcGxlLCBiYWRnZSBjYW4gYmUgcGxhY2VkIGludG8gbmItY2FyZCBoZWFkZXI6XG4gKiBAc3RhY2tlZC1leGFtcGxlKFNob3djYXNlLCBiYWRnZS9iYWRnZS1zaG93Y2FzZS5jb21wb25lbnQpXG4gKlxuICogQmFkZ2UgbG9jYXRlZCBvbiB0aGUgYm90dG9tIHJpZ2h0IHdpdGggd2FybmluZyBzdGF0dXM6XG4gKlxuICogYGBgaHRtbFxuICogPG5iLWJhZGdlIHRleHQ9XCJiYWRnZVRleHRcIiBzdGF0dXM9XCJ3YXJuaW5nXCIgcG9zaXRpb249XCJib3R0b20gcmlnaHRcIj5cbiAqIDwvbmItYmFkZ2U+XG4gKiBgYGBcbiAqXG4gKiBAc3R5bGVzXG4gKlxuICogYmFkZ2UtYm9yZGVyLXJhZGl1czpcbiAqIGJhZGdlLXRleHQtZm9udC1mYW1pbHk6XG4gKiBiYWRnZS10ZXh0LWZvbnQtc2l6ZTpcbiAqIGJhZGdlLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBiYWRnZS10ZXh0LWxpbmUtaGVpZ2h0OlxuICogYmFkZ2UtcGFkZGluZzpcbiAqIGJhZGdlLWJhc2ljLWJhY2tncm91bmQtY29sb3I6XG4gKiBiYWRnZS1iYXNpYy10ZXh0LWNvbG9yOlxuICogYmFkZ2UtcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYmFkZ2UtcHJpbWFyeS10ZXh0LWNvbG9yOlxuICogYmFkZ2Utc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYmFkZ2Utc3VjY2Vzcy10ZXh0LWNvbG9yOlxuICogYmFkZ2UtaW5mby1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYmFkZ2UtaW5mby10ZXh0LWNvbG9yOlxuICogYmFkZ2Utd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYmFkZ2Utd2FybmluZy10ZXh0LWNvbG9yOlxuICogYmFkZ2UtZGFuZ2VyLWJhY2tncm91bmQtY29sb3I6XG4gKiBiYWRnZS1kYW5nZXItdGV4dC1jb2xvcjpcbiAqIGJhZGdlLWNvbnRyb2wtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGJhZGdlLWNvbnRyb2wtdGV4dC1jb2xvcjpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJCYWRnZUNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogVGV4dCB0byBkaXNwbGF5XG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICovXG4gICAgdGV4dDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEJhZGdlIHBvc2l0aW9uXG4gICAgICpcbiAgICAgKiBDYW4gYmUgc2V0IHRvIGFueSBjbGFzcyBvciB0byBvbmUgb2YgcHJlZGVmaW5lZCBwb3NpdGlvbnM6XG4gICAgICogJ3RvcCBsZWZ0JywgJ3RvcCByaWdodCcsICdib3R0b20gbGVmdCcsICdib3R0b20gcmlnaHQnLFxuICAgICAqICd0b3Agc3RhcnQnLCAndG9wIGVuZCcsICdib3R0b20gc3RhcnQnLCAnYm90dG9tIGVuZCdcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKi9cbiAgICBnZXQgcG9zaXRpb24oKTogTmJCYWRnZVBvc2l0aW9uO1xuICAgIHNldCBwb3NpdGlvbih2YWx1ZTogTmJCYWRnZVBvc2l0aW9uKTtcbiAgICBwcm90ZWN0ZWQgX2RlZmF1bHRQb3NpdGlvbjogTmJCYWRnZVBvc2l0aW9uO1xuICAgIHByb3RlY3RlZCBfcG9zaXRpb246IE5iQmFkZ2VQb3NpdGlvbjtcbiAgICAvKipcbiAgICAgKiBCYWRnZSBzdGF0dXMgKGFkZHMgc3BlY2lmaWMgc3R5bGVzKTpcbiAgICAgKiAnYmFzaWMnLCAncHJpbWFyeScsICdpbmZvJywgJ3N1Y2Nlc3MnLCAnd2FybmluZycsICdkYW5nZXInLCAnY29udHJvbCdcbiAgICAgKi9cbiAgICBnZXQgc3RhdHVzKCk6IE5iQ29tcG9uZW50U3RhdHVzO1xuICAgIHNldCBzdGF0dXModmFsdWU6IE5iQ29tcG9uZW50U3RhdHVzKTtcbiAgICBwcm90ZWN0ZWQgX3N0YXR1czogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgZ2V0IHByaW1hcnkoKTogYm9vbGVhbjtcbiAgICBnZXQgc3VjY2VzcygpOiBib29sZWFuO1xuICAgIGdldCBpbmZvKCk6IGJvb2xlYW47XG4gICAgZ2V0IHdhcm5pbmcoKTogYm9vbGVhbjtcbiAgICBnZXQgZGFuZ2VyKCk6IGJvb2xlYW47XG4gICAgZ2V0IGJhc2ljKCk6IGJvb2xlYW47XG4gICAgZ2V0IGNvbnRyb2woKTogYm9vbGVhbjtcbiAgICBnZXQgdG9wKCk6IGJvb2xlYW47XG4gICAgZ2V0IHJpZ2h0KCk6IGJvb2xlYW47XG4gICAgZ2V0IGJvdHRvbSgpOiBib29sZWFuO1xuICAgIGdldCBsZWZ0KCk6IGJvb2xlYW47XG4gICAgZ2V0IHN0YXJ0KCk6IGJvb2xlYW47XG4gICAgZ2V0IGVuZCgpOiBib29sZWFuO1xufVxuIl19